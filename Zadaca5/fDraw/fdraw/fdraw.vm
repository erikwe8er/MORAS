function fdraw.f 1
push argument 0
push argument 0
call Math.multiply 2
pop local 0
push local 0
push argument 0
call Math.multiply 2
pop local 0
push local 0
push constant 33
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
label IF_FALSE0
push constant 33
return
function fdraw.compare 0
push argument 0
push argument 1
eq
return
function fdraw.changeX 1
push constant 32
push argument 0
add
push constant 4
call Math.multiply 2
pop local 0
push local 0
return
function fdraw.changeY 1
push constant 256
push constant 32
push argument 0
add
push constant 4
call Math.multiply 2
sub
pop local 0
push local 0
return
function fdraw.draw_func 4
push constant 4
pop local 1
push constant 0
push constant 128
push constant 256
push constant 128
call Screen.drawLine 4
pop temp 0
push constant 128
push constant 0
push constant 128
push constant 255
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push local 1
push constant 256
lt
not
if-goto WHILE_END0
push local 1
push constant 127
push local 1
push constant 129
call Screen.drawLine 4
pop temp 0
push constant 127
push local 1
push constant 129
push local 1
call Screen.drawLine 4
pop temp 0
push local 1
push constant 4
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 32
neg
pop local 0
push constant 0
pop local 1
push constant 64
call Array.new 1
pop local 2
push constant 64
call Array.new 1
pop local 3
label WHILE_EXP1
push local 1
push constant 64
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push local 0
call fdraw.changeX 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call fdraw.f 1
push constant 32
neg
gt
push local 0
call fdraw.f 1
push constant 32
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 3
add
push local 0
call fdraw.f 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 3
add
push local 1
push local 3
add
pop pointer 1
push that 0
call fdraw.changeY 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 1
push local 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 1
push constant 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push constant 1
pop local 0
label WHILE_EXP2
push local 0
push constant 64
lt
not
if-goto WHILE_END2
push local 1
push local 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
not
push local 0
push local 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 3
add
pop pointer 1
push that 0
push local 0
push local 3
add
pop pointer 1
push that 0
eq
not
push local 0
push local 2
add
pop pointer 1
push that 0
push constant 129
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 2
add
pop pointer 1
push that 0
push local 0
push local 3
add
pop pointer 1
push that 0
push local 1
push local 2
add
pop pointer 1
push that 0
push local 1
push local 3
add
pop pointer 1
push that 0
call Screen.drawLine 4
pop temp 0
push local 0
pop local 1
label IF_FALSE2
push local 1
push local 3
add
pop pointer 1
push that 0
push local 0
push local 3
add
pop pointer 1
push that 0
eq
not
push local 0
push local 2
add
pop pointer 1
push that 0
push constant 128
gt
push local 0
push local 2
add
pop pointer 1
push that 0
push constant 128
eq
or
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
label WHILE_EXP3
push local 0
push local 3
add
pop pointer 1
push that 0
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
eq
not
if-goto WHILE_END3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
push local 0
push local 2
add
pop pointer 1
push that 0
push local 0
push local 3
add
pop pointer 1
push that 0
push local 1
push local 2
add
pop pointer 1
push that 0
push local 1
push local 3
add
pop pointer 1
push that 0
call Screen.drawLine 4
pop temp 0
push local 0
pop local 1
label IF_FALSE3
label IF_FALSE1
push local 1
push local 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
pop local 1
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 2
call Array.dispose 1
pop temp 0
push local 3
call Array.dispose 1
pop temp 0
push constant 0
return
